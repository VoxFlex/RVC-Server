import tempfile
import zipfile
from fastapi import HTTPException, UploadFile
from fastapi.responses import JSONResponse
from data.rvc_manager import rvc, MODEL_DIR
import os

def list_models():
    models = [f for f in os.listdir(MODEL_DIR) if f.endswith(".pth")]
    return {"available_models": models}

def select_model(model_name: str):
    """
    ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    """
    model_path = os.path.join(MODEL_DIR, model_name)
    
    if not os.path.exists(model_path):
        raise HTTPException(status_code=404, detail=f"‚ùå Model '{model_name}' not found.")

    rvc.unload_model()
    rvc.load_model(model_path)
    return {"message": f"‚úÖ Model '{model_name}' selected successfully."}
    
def unload_voice_model():
    rvc.unload_model()
    return {"message": "Voice model unloaded"}

def current_model():
    return {"current_model": rvc.current_model}

def upload_model(file: UploadFile):
    """
    ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå ZIP ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå .pth ‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏≤‡∏ô‡πÉ‡∏ô‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    """
    try:
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•
        if not file.filename.endswith(".zip"):
            raise HTTPException(status_code=400, detail="Only .zip files are supported.")

        # üîπ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö .zip ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
        with tempfile.NamedTemporaryFile(delete=False) as tmp_file:
            contents = file.file.read()
            tmp_file.write(contents)
            zip_path = tmp_file.name  # path ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå zip ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß

        # üîπ ‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå .zip
        with zipfile.ZipFile(zip_path, 'r') as zip_ref:
            extracted_files = zip_ref.namelist()
            
            # üîé ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå .pth ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô zip ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            pth_files = [f for f in extracted_files if f.endswith('.pth')]
            if not pth_files:
                raise HTTPException(status_code=400, detail="‚ùå No .pth file found in the uploaded ZIP.")

            # üîπ Extract ‡πÅ‡∏•‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô voice_models
            zip_ref.extractall(MODEL_DIR)

        # üîπ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°
        added_models = [os.path.basename(f) for f in pth_files]

        # üîπ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÉ‡∏´‡∏°‡πà
        rvc.models = rvc._load_available_models()

        return JSONResponse(content={
            "message": "‚úÖ Model uploaded and extracted successfully.",
            "uploaded_models": added_models
        })

    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

    finally:
        # üîπ ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå zip ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡πá‡∏à
        if os.path.exists(zip_path):
            os.remove(zip_path)
